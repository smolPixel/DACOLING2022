"""Small script to avoid me having to recalculate the average results everytime I change something"""
import numpy as np

ResultsAccuracySST2={'basline':{'xgboost':{'100':54.1, '500':58.7, '1000':64.3, '0':70.6},
						'FFN':{'100':56.5, '500':60.7, '1000':66.4, '0':77.8},
						'bert':{'100':62.7, '500':83.4, '1000':87.5, '0':90.9}},
			 'EDA':{'xgboost':{'100':53.2, '500':62.0, '1000':65.5, '0':72.2},
						'FFN':{'100':56.8, '500':62.7, '1000':67.7, '0':77.8},
						'bert':{'100':66.3, '500':86.1, '1000':88.1, '0':91.4}},
			 'W2V':{'xgboost':{'100':55.8, '500':61.0, '1000':64.4, '0':72.4},
						'FFN':{'100':56.1, '500':63.9, '1000':67.5, '0':78.2},
						'bert':{'100':62.9, '500':85.7, '1000':88.0, '0':91.3}},
			 'VAE':{'xgboost':{'100':55.2, '500':59.6, '1000':63.6, '0':71.2},
						'FFN':{'100':56.0, '500':62.1, '1000':66.1, '0':77.6},
						'bert':{'100':64.5, '500':85.0, '1000':87.7, '0':90.8}},
			 'GAN':{'xgboost':{'100':54.1, '500':60.6, '1000':63.8, '0':70.7},
						'FFN':{'100':55.4, '500':62.5, '1000':66.4, '0':77.4},
						'bert':{'100':62.9, '500':84.5, '1000':87.0, '0':90.1}},
			 'CVAE':{'xgboost':{'100':55.0, '500':61.0, '1000':65.1, '0':72.5},
						'FFN':{'100':56.6, '500':63.8, '1000':66.9, '0':77.4},
						'bert':{'100':64.7, '500':84.6, '1000':87.6, '0':90.1}},
			 'CATGAN':{'xgboost':{'100':53.5, '500':60.4, '1000':64.6, '0':69.3},
						'FFN':{'100':56.3, '500':62.6, '1000':67.4, '0':77.4},
						'bert':{'100':66.4, '500':85.6, '1000':88.0, '0':90.9}},
			 'CBERT':{'xgboost':{'100':53.9, '500':61.7, '1000':64.7, '0':72.1},
						'FFN':{'100':57.3, '500':63.4, '1000':66.6, '0':77.6},
						'bert':{'100':66.9, '500':85.8, '1000':88.1, '0':91.3}},
			 'GPT':{'xgboost':{'100':53.8, '500':62.1, '1000':67.5, '0':73.1},
						'FFN':{'100':56.2, '500':64.4, '1000':67.7, '0':78.8},
						'bert':{'100':66.7, '500':85.8, '1000':87.3, '0':89.8}}}

# ResultsAccuracyTREC6={'basline':{'xgboost':{'100':50.4, '500':65.6, '1000':70.2, '0':80.0},
# 						'FFN':{'100':52.5, '500':60.9, '1000':63.9, '0':77.2},
# 						'bert':{'100':31.7, '500':44.0, '1000':66.1, '0':96.4}},
# 			 'EDA':{'xgboost':{'100':47.3, '500':59, '1000':66.8, '0':71.6},
# 						'FFN':{'100':51.9, '500':60.8, '1000':67.6, '0':83.0},
# 						'bert':{'100':32.3, '500':64.7, '1000':87.3, '0':96.8}},
# 			 'W2V':{'xgboost':{'100':43.6, '500':57.5, '1000':63.5, '0':64.7},
# 						'FFN':{'100':51.4, '500':59.1, '1000':67.8, '0':None},
# 						'bert':{'100':30.2, '500':56.0, '1000':84.2, '0':96.4}},
# 			 'VAE':{'xgboost':{'100':54.8, '500':60.9, '1000':69.0, '0':None},
# 						'FFN':{'100':48.6, '500':59.2, '1000':63.9, '0':None},
# 						'bert':{'100':36.2, '500':69.3, '1000':86.5, '0':None}},
# 			 'GAN':{'xgboost':{'100':52.1, '500':51.6, '1000':66.3, '0':None},
# 						'FFN':{'100':None, '500':None, '1000':None, '0':None},
# 						'bert':{'100':37.2, '500':61.7, '1000':78.9, '0':None}},
# 			 'CVAE':{'xgboost':{'100':37.8, '500':39.1, '1000':68.3, '0':None},
# 						'FFN':{'100':49, '500':51.8, '1000':61.9, '0':None},
# 						'bert':{'100':28.7, '500':44.4, '1000':65.9, '0':None}},
# 			 'CATGAN':{'xgboost':{'100':48, '500':60.1, '1000':67.5, '0':None},
# 						'FFN':{'100':54.6, '500':58.2, '1000':66.5, '0':None},
# 						'bert':{'100':34.3, '500':69, '1000':87.0, '0':None}},
# 			 'CBERT':{'xgboost':{'100':45.2, '500':61.4, '1000':67.7, '0':72.4},
# 						'FFN':{'100':55.4, '500':59.9, '1000':67.5, '0':None},
# 						'bert':{'100':36.5, '500':65.1, '1000':87.8, '0':None}},
# 			 'GPT':{'xgboost':{'100':46.7, '500':49.7, '1000':54.9, '0':None},
# 						'FFN':{'100':51.4, '500':52.9, '1000':59.9, '0':None},
# 						'bert':{'100':32.1, '500':59.5, '1000':80.7, '0':None}}}

ResultsF1Trec6={'basline':{'xgboost':{'100':44.8, '500':59.5, '1000':65.2, '0':74.4},
						'FFN':{'100':47.3, '500':58.2, '1000':63.0, '0':78.3},
						'bert':{'100':24.8, '500':38.3, '1000':60.4, '0':95.1}},
			 'EDA':{'xgboost':{'100':44.1, '500':55.8, '1000':66.8, '0':68.3},
						'FFN':{'100':46.2, '500':58.1, '1000':66.2, '0':77.2},
						'bert':{'100':26.3, '500':59.0, '1000':83.3, '0':95.5}},
			 'W2V':{'xgboost':{'100':40.6, '500':54.7, '1000':60.9, '0':63.5},
						'FFN':{'100':45.9, '500':58.2, '1000':67.0, '0':80.1},
						'bert':{'100':25.0, '500':49.7, '1000':79.9, '0':95.2}},
			 'VAE':{'xgboost':{'100':49.6, '500':57.6, '1000':65.7, '0':71.4},
						'FFN':{'100':44.7, '500':56.2, '1000':62.5, '0':80.7},
						'bert':{'100':27.7, '500':63.5, '1000':82.3, '0':95.3}},
			 'GAN':{'xgboost':{'100':48.9, '500':50.3, '1000':63.9, '0':77.3},
						'FFN':{'100':47.0, '500':56.1, '1000':58.5, '0':79.0},
						'bert':{'100':27.7, '500':53.9, '1000':73.5, '0':94.6}},
			 'CVAE':{'xgboost':{'100':45.6, '500':52.5, '1000':64.8, '0':72.2},
						'FFN':{'100':43.2, '500':56.9, '1000':61.9, '0':81.0},
						'bert':{'100':27.0, '500':64.3, '1000':64.7, '0':95.2}},
			 'CATGAN':{'xgboost':{'100':43.9, '500':55.1, '1000':63.7, '0':71.1},
						'FFN':{'100':49.7, '500':60.9, '1000':65.1, '0':73.6},
						'bert':{'100':27.9, '500':63, '1000':82.6, '0':95.0}},
			 'CBERT':{'xgboost':{'100':40.9, '500':56.8, '1000':63.4, '0':68.8},
						'FFN':{'100':50.7, '500':57.7, '1000':65.8, '0':80.9},
						'bert':{'100':29.3, '500':59.2, '1000':83.4, '0':95.3}},
			 'GPT':{'xgboost':{'100':44.9, '500':49.7, '1000':55.2, '0':71.4},
						'FFN':{'100':47.5, '500':52.4, '1000':59.4, '0':79.9},
						'bert':{'100':26.2, '500':55.0, '1000':75.5, '0':92.6}}}

ResultsAccuracyFakeNews={'basline':{'xgboost':{'100':81.8, '500':88.8, '1000':89.7, '0':92.5},
						'FFN':{'100':80.8, '500':86.4, '1000':87.6, '0':90.3},
						'bert':{'100':80.8, '500':89.8, '1000':91.1, '0':98.2}},
			 'EDA':{'xgboost':{'100':81.4, '500':88.9, '1000':90.1, '0':92.7},
						'FFN':{'100':78.6, '500':85.4, '1000':87.4, '0':93.3},
						'bert':{'100':84.9, '500':90.0, '1000':91.2, '0':98.5}},
			 'W2V':{'xgboost':{'100':80.8, '500':89.2, '1000':90.1, '0':92.3},
						'FFN':{'100':91.7, '500':87.2, '1000':88.4, '0':93.4},
						'bert':{'100':84.0, '500':90.0, '1000':91.7, '0':96.0}},
			 'VAE':{'xgboost':{'100':83.4, '500':89.1, '1000':89.7, '0':92.4},
						'FFN':{'100':78.8, '500':87.4, '1000':87.6, '0':93.9},
						'bert':{'100':86.1, '500':90.1, '1000':91.8, '0':96.0}},
			 'GAN':{'xgboost':{'100':78.2, '500':88.7, '1000':89.6, '0':92.5},
						'FFN':{'100':79.6, '500':85.8, '1000':87.9, '0':93.3},
						'bert':{'100':82.6, '500':89.3, '1000':90.9, '0':96.0}},
			 'CVAE':{'xgboost':{'100':78.2, '500':88.7, '1000':89.6, '0':92.4},
						'FFN':{'100':76.9, '500':85.8, '1000':87.9, '0':93.9},
						'bert':{'100':85.2, '500':90.0, '1000':91.6, '0':95.9}},
			 'CATGAN':{'xgboost':{'100':80.6, '500':86.3, '1000':90.1, '0':90.8},
						'FFN':{'100':80.9, '500':86.9, '1000':88.8, '0':83.9},
						'bert':{'100':86.4, '500':90.5, '1000':91.8, '0':95.7}},
			 'CBERT':{'xgboost':{'100':80.1, '500':87.9, '1000':89.8, '0':92.5},
						'FFN':{'100':80.6, '500':86.8, '1000':88.3, '0':93.8},
						'bert':{'100':86.6, '500':90.0, '1000':91.7, '0':95.7}},
			 'GPT':{'xgboost':{'100':70.9, '500':79.8, '1000':84.9, '0':91.8},
						'FFN':{'100':78.2, '500':84.8, '1000':86.7, '0':92.1},
						'bert':{'100':85.5, '500':88.8, '1000':90, '0':94.6}}}

ResultsAccuracyIrony={'basline':{'xgboost':{'100':49.3, '500':55.8, '1000':57, '0':60.9},
						'FFN':{'100':51.6, '500':55.1, '1000':56.1, '0':60.0},
						'bert':{'100':56.3, '500':62.6, '1000':65.0, '0':68.9}},
			 'EDA':{'xgboost':{'100':50.6, '500':55.8, '1000':57.5, '0':60.6},
						'FFN':{'100':51.6, '500':55.9, '1000':55.9, '0':60.9},
						'bert':{'100':57.3, '500':63.6, '1000':66.3, '0':70.1}},
			 'W2V':{'xgboost':{'100':50.1, '500':56.2, '1000':57.6, '0':61.8},
						'FFN':{'100':51.8, '500':55.2, '1000':57.8, '0':60},
						'bert':{'100':57.9, '500':63.8, '1000':66.3, '0':69.5}},
			 'VAE':{'xgboost':{'100':50.8, '500':56.2, '1000':57.8, '0':61.0},
						'FFN':{'100':51.8, '500':54.4, '1000':56.7, '0':60.7},
						'bert':{'100':57.2, '500':63.3, '1000':65.7, '0':69.6}},
			 'GAN':{'xgboost':{'100':51.0, '500':56.5, '1000':56.8, '0':61.3},
						'FFN':{'100':52.2, '500':55.9, '1000':55.8, '0':59.9},
						'bert':{'100':56.7, '500':62.5, '1000':65.1, '0':69.0}},
			 'CVAE':{'xgboost':{'100':51.5, '500':55.3, '1000':58.0, '0':61.5},
						'FFN':{'100':52.3, '500':55.1, '1000':56.7, '0':61.0},
						'bert':{'100':57.4, '500':64.0, '1000':66.2, '0':69.8}},
			 'CATGAN':{'xgboost':{'100':49.8, '500':56.5, '1000':58, '0':61.5},
						'FFN':{'100':51.9, '500':55.8, '1000':57.5, '0':61.0},
						'bert':{'100':58.1, '500':63.5, '1000':65.8, '0':63.5}},
			 'CBERT':{'xgboost':{'100':49.8, '500':56, '1000':57.6, '0':61},
						'FFN':{'100':52.4, '500':54.9, '1000':57.3, '0':60.7},
						'bert':{'100':58.2, '500':64.0, '1000':66.5, '0':69.9}},
			 'GPT':{'xgboost':{'100':50.3, '500':56.7, '1000':57.1, '0':61.7},
						'FFN':{'100':51.9, '500':54.6, '1000':56.2, '0':58.8},
						'bert':{'100':57.4, '500':63.1, '1000':65.3, '0':69.2}}}

ResultsF1IronyB={'basline':{'xgboost':{'100':20.0, '500':29.1, '1000':32.0, '0':36.6},
						'FFN':{'100':23.7, '500':24.7, '1000':29.2, '0':33.0},
						'bert':{'100':20.8, '500':32.4, '1000':36.4, '0':48.7}},
			 'EDA':{'xgboost':{'100':22.6, '500':30.2, '1000':33.1, '0':37.0},
						'FFN':{'100':23.7, '500':26.3, '1000':27.0, '0':33.6},
						'bert':{'100':23.4, '500':36.3, '1000':42.4, '0':50.5}},
			 'W2V':{'xgboost':{'100':23.1, '500':29.9, '1000':32.6, '0':35.9},
						'FFN':{'100':23.7, '500':26.1, '1000':27.8, '0':33.2},
						'bert':{'100':25.0, '500':35.5, '1000':39.9, '0':49.7}},
			 'VAE':{'xgboost':{'100':23.5, '500':29.4, '1000':32.5, '0':36.6},
						'FFN':{'100':21.9, '500':25.8, '1000':27.5, '0':32.7},
						'bert':{'100':23.6, '500':37.0, '1000':41.4, '0':49.0}},
			 'GAN':{'xgboost':{'100':22.6, '500':30.0, '1000':33.1, '0':36.6},
						'FFN':{'100':23.2, '500':23.7, '1000':25.8, '0':32.0},
						'bert':{'100':22.0, '500':32.5, '1000':36.9, '0':50.2}},
			 'CVAE':{'xgboost':{'100':23.2, '500':30.1, '1000':34.3, '0':37.2},
						'FFN':{'100':23.1, '500':24.1, '1000':29.4, '0':32.9},
						'bert':{'100':22.8, '500':36.7, '1000':42.5, '0':48.3}},
			 'CATGAN':{'xgboost':{'100':22.5, '500':29.7, '1000':34.1, '0':35.7},
						'FFN':{'100':21.9, '500':25.6, '1000':28.9, '0':31.9},
						'bert':{'100':23.8, '500':36.8, '1000':42.5, '0':49.7}},
			 'CBERT':{'xgboost':{'100':22.5, '500':30.0, '1000':32.9, '0':38.2},
						'FFN':{'100':22.7, '500':24.7, '1000':27.0, '0':32.6},
						'bert':{'100':23.3, '500':36, '1000':42, '0':50.1}},
			 'GPT':{'xgboost':{'100':22.9, '500':30.8, '1000':32.8, '0':36.0},
						'FFN':{'100':21.9, '500':23.2, '1000':24.0, '0':32.2},
						'bert':{'100':22.8, '500':35.1, '1000':41.2, '0':50.2}}}

ResultsToAverage=[ResultsAccuracySST2, ResultsF1Trec6, ResultsAccuracyFakeNews, ResultsAccuracyIrony, ResultsF1IronyB]

ResultsAverage={'basline':{'xgboost':{'100':None, '500':None, '1000':None, '0':None},
						'FFN':{'100':None, '500':None, '1000':None, '0':None},
						'bert':{'100':None, '500':None, '1000':None, '0':None}},
			 'EDA':{'xgboost':{'100':None, '500':None, '1000':None, '0':None},
						'FFN':{'100':None, '500':None, '1000':None, '0':None},
						'bert':{'100':None, '500':None, '1000':None, '0':None}},
             'W2V':{'xgboost':{'100':None, '500':None, '1000':None, '0':None},
						'FFN':{'100':None, '500':None, '1000':None, '0':None},
						'bert':{'100':None, '500':None, '1000':None, '0':None}},
			 'VAE':{'xgboost':{'100':None, '500':None, '1000':None, '0':None},
						'FFN':{'100':None, '500':None, '1000':None, '0':None},
						'bert':{'100':None, '500':None, '1000':None, '0':None}},
			 'GAN':{'xgboost':{'100':None, '500':None, '1000':None, '0':None},
						'FFN':{'100':None, '500':None, '1000':None, '0':None},
						'bert':{'100':None, '500':None, '1000':None, '0':None}},
			 'CVAE':{'xgboost':{'100':None, '500':None, '1000':None, '0':None},
						'FFN':{'100':None, '500':None, '1000':None, '0':None},
						'bert':{'100':None, '500':None, '1000':None, '0':None}},
			 'CATGAN':{'xgboost':{'100':None, '500':None, '1000':None, '0':None},
						'FFN':{'100':None, '500':None, '1000':None, '0':None},
						'bert':{'100':None, '500':None, '1000':None, '0':None}},
			 'CBERT':{'xgboost':{'100':None, '500':None, '1000':None, '0':None},
						'FFN':{'100':None, '500':None, '1000':None, '0':None},
						'bert':{'100':None, '500':None, '1000':None, '0':None}},
			 'GPT':{'xgboost':{'100':None, '500':None, '1000':None, '0':None},
						'FFN':{'100':None, '500':None, '1000':None, '0':None},
						'bert':{'100':None, '500':None, '1000':None, '0':None}}}

for algo, classifiers in ResultsAverage.items():
	for classifier, splits in classifiers.items():
		for split, _ in splits.items():
			ArrResults=[]
			for df in ResultsToAverage:
				ArrResults.append(df[algo][classifier][split])
			if None in ArrResults:
				Average=None
			else:
				Average=sum(ArrResults)/len(ArrResults)
			ResultsAverage[algo][classifier][split]=Average
			print(f"{algo}/{classifier}/{split}: {Average}")
	print('---------')

print("Calculating average over small splits")
#Calculating Average
for algo, classifiers in ResultsAverage.items():
	for classifier, splits in classifiers.items():
		AverageResults=[]
		for split, results in splits.items():
			if split=="0":
				continue
			AverageResults.append(results)
		if None in AverageResults:
			Average=None
		else:
			Average=sum(AverageResults)/3
		print(f"{algo}/{classifier}/: {Average}")
	print('---------')


SizeAverage={'xgboost':{'100':[], '500':[], '1000':[], '0':[]},
			'FFN':{'100':[], '500':[], '1000':[], '0':[]},
			'bert':{'100':[], '500':[], '1000':[], '0':[]}}

print("Calculating average over sizes")
#Calculating Average
for algo, classifiers in ResultsAverage.items():
	if algo=='basline':
		continue
	for classifier, splits in classifiers.items():
		for split, results in splits.items():
			SizeAverage[classifier][split].append(results)
	# 	if None in AverageResults:
	# 		Average=None
	# 	else:
	# 		Average=sum(AverageResults)/3
	# 	print(f"{algo}/{classifier}/: {Average}")
	# print('---------')
for classifier, sizes in SizeAverage.items():
	for size, results in sizes.items():
		if None in results:
			average=None
		else:
			average=sum(results)/len(results)
		SizeAverage[classifier][size]=average
print(SizeAverage)

print("Calculating average over datasets")
names=["SST-2", "TREC6","FakeNews", "Irony", "IronyB"]

for name, result in zip(names, ResultsToAverage):
	print(name)
	Average={"xgboost":[], 'FFN':[], 'bert': []}
	for algo, classifiers in result.items():
		if algo=="basline":
			print("Baseline average:")
			av=[]
			for classifier, resultsClassifier in classifiers.items():
				# print(classifier)
				print(f'{classifier}: {(resultsClassifier["100"]+resultsClassifier["500"]+resultsClassifier["1000"])/3}')
		else:
			for classifier, resultsClassifier in classifiers.items():
				Average[classifier].append(resultsClassifier["100"])
				Average[classifier].append(resultsClassifier["500"])
				Average[classifier].append(resultsClassifier["1000"])

	print(f"Average result xgboost: {sum(Average['xgboost'])/len(Average['xgboost'])}")
	print(f"Average result FFN: {sum(Average['FFN'])/len(Average['FFN'])}")
	print(f"Average result bert: {sum(Average['bert'])/len(Average['bert'])}")